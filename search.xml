<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[gitment的坑]]></title>
    <url>%2F2018%2F04%2F04%2F1522836738401%2F</url>
    <content type="text"><![CDATA[gitment 初始化评论的时候总是报Error: Validation Failed &emsp;&emsp;导致这个问题产生的原因是因为在调用issue api 时，请求数据中对我的文章中文标题（utf-8)超过了50个字符导致的。&emsp;&emsp;注意：issue的标签label有长度限制！label的最大长度限制是50个字符。 &emsp;&emsp; 解决方案：在外层的_config.yml 里把permalink: :year/:month/:day/:title/ 改成:year/:month/:day/:id/]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么学c语言]]></title>
    <url>%2F2018%2F04%2F04%2F1522823300751%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;最近开始重新学习c语言。有同事劝我说，现在已经有了几年工作经验，而且c语言开发对现在的工作没有应用场景，学习意义不大。但我自己还是坚持要学，主要考虑以下几点： 通过几年的python以及前端编程积累，以及最近一年的golang开发经历，让我越来越认识到计算机语言基础的重要性。而c语言是大学必修的基础语言，在高级编程语言中算是底层编程语言，计算机语言基础知识面比较全面. 进入大数据互联网时代，对语言的性能要求越来越高，而c语言仍是目前最快的高级编程语言。 C语言编程对程序设计有更高的要求，也最严谨；而对于coder的进阶阶段，code的优雅及逻辑的严谨是最直接的体现。 C语言是一切其他高级编程语言的踏脚石，对c语言深入理解，有助于快速掌握其他的编程语言，对coder的知识横向储备有重要作用，能够加速coder的成长之路。 int main(void) { printf(&quot;My first goal：coder to engineer!Go!\n&quot;); return 0; }]]></content>
  </entry>
  <entry>
    <title><![CDATA[一首感人至深的小诗]]></title>
    <url>%2F2018%2F04%2F04%2F1522808233943%2F</url>
    <content type="text"><![CDATA[一碗油盐饭&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;--父母在，人生尚有来处；父母去，人生只剩归途！ 前天 我放学回家 锅里有一碗油盐饭 昨天 我放学回家 锅里没有油盐饭 今天 我放学回家 炒了一碗油盐饭 放在了妈妈坟前]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[禅]]></title>
    <url>%2F2018%2F03%2F27%2F1522122352060%2F</url>
    <content type="text"><![CDATA[风来竹疏，风过竹不留声；雁渡寒潭，雁去潭不留影；事来了，则本心应对；事去了，心随安。]]></content>
      <categories>
        <category>禅</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python 开发环境]]></title>
    <url>%2F2017%2F02%2F24%2F1521873871192%2F</url>
    <content type="text"><![CDATA[Python the Zen of Python, by Tim PetersBeautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren&apos;t special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you&apos;re Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it&apos;s a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let&apos;s do more of those!]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[就这样开始吧～]]></title>
    <url>%2F2017%2F02%2F13%2Fcjhj6tk7h0002stfys8qs1g6r%2F</url>
    <content type="text"><![CDATA[有一个老板跟员工出去吃饭，路上见一辆最新款的布加迪威龙跑车。员工们纷纷议论，这时老板笑着说：“不要羡慕，要相信自己。我相信，只要大家肯努力，明年我就可以买一辆了。“ 😄 很喜欢的一句话：All work and no play makes Jack a dull boy; all play and no work makes Jack a mere boy!带着愉悦的心情，开始我的不一样的人生！好好活～]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
